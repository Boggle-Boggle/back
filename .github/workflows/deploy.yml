name: Deploy to RaspberryPi Server
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    #JDK 셋팅
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    #프로젝트 빌드
    - name: Build with Gradle  
      run: |
        chmod +x ./gradlew
        ./gradlew build

    #도커허브 로그인
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    #도커이미지 빌드
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        host: ${{ secrets.RASPBERRY_PI_HOST }}
        username: ${{ secrets.RASPBERRY_PI_USERNAME }}
        key: ${{ secrets.RASPBERRY_PI_SSH_KEY }}
        source: "docker/docker-compose.yml,docker/nginx.conf"
        target: "/path/on/raspberry/pi/"
        strip_components: 1

    #docker-compose 및 nginx.conf파일을 서버로 복사
    - name: Copy files to Raspberry Pi
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PI_HOST }}
        port: ${{ secrets.PI_PORT }}
        username: ${{ secrets.PI_USERNAME }}
        password: ${{ secrets.PI_PASSWORD }}
        source: "./docker/docker-compose.yml,./docker/nginx.conf"
        target: "Project/bbegok"
        

    #라즈베리파이 서버에 배포
    - name: Deploy to Home Server
      env:
        PI_HOST: ${{ secrets.PI_HOST }}
        PI_PORT: ${{ secrets.PI_PORT }}
        PI_USERNAME: ${{ secrets.PI_USERNAME }}
        PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
      run: |
        sshpass -p "$PI_PASSWORD" ssh -v -o StrictHostKeyChecking=no -p $PI_PORT $PI_USERNAME@$PI_HOST << EOF
        cd Project/bbegok
        docker-compose pull
        docker-compose down
        docker-compose up -d
        docker image prune -f
        docker-compose exec -T nginx nginx -s reload || docker-compose restart nginx
        EOF
