plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.boggle-boggle'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	asciidoctorExtensions
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

ext {
	set('springCloudVersion', "2023.0.3")
	snippetsDir = file('build/generated-snippets')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	//restDocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	//test
	testImplementation 'org.springframework.boot:spring-boot-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.assertj:assertj-core'


	// health check
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//json 처리
	implementation("org.openapitools:jackson-databind-nullable:0.2.4")
	implementation "io.hypersistence:hypersistence-utils-hibernate-63:3.9.0"

	//openFeign 추가
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-gson:11.8'
	implementation 'com.google.code.gson:gson:2.8.8'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//로그인
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'

	// Apple login
	implementation 'com.nimbusds:nimbus-jose-jwt:3.10'
	implementation 'org.bouncycastle:bcpkix-jdk18on:1.72'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	attributes 'toc': 'left', 'toclevels': '3', 'numbered': ''
	dependsOn test
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir

	sources {
		include("**/*.adoc")
	}

	baseDirFollowsSourceFile()

	doFirst {
		delete file('src/main/resources/static/docs')
	}
}

bootJar {
	dependsOn asciidoctor
	doLast {
		copy {
			from "${asciidoctor.outputDir}"
			into "${destinationDirectory.get()}/BOOT-INF/classes/static/docs"
		}
	}
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}