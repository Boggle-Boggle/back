events {
    worker_connections 1024;
}

http {
    upstream spring_app { #docker-compose에서 정의한 서비스
        server app:8080;
    }

    upstream portainer_app {
        server portainer:9000;
    }

    upstream metabase_app {
        server metabase:3000;
    }

    server {
        listen 8880;
        server_name ${DOMAIN_NAME};

        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name ${DOMAIN_NAME};
       
        ssl_certificate ${SSL_CERTIFICATE};
        ssl_certificate_key ${SSL_CERTIFICATE_KEY};

        location /backend/ { #모든 요청을 Spring으로 프록시
            rewrite ^/backend/(.*) /$1 break;
            proxy_pass http://spring_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /portainer/ {
            rewrite ^/portainer/(.*) /$1 break;
            proxy_pass http://portainer_app/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;            
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name ${ANALYTICS_DOMAIN_NAME};
        location / {
            proxy_pass http://metabase_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
