server {
    listen 80;
    server_name ${DOMAIN_NAME};

    # Let's Encrypt 인증 챌린지를 위한 설정
    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    # HTTP를 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ${DOMAIN_NAME};

    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # 여기에 기존의 location 블록들 추가
    location /bbegok/ {
        rewrite ^/bbegok/(.*) /$1 break;
        proxy_pass http://${BACKEND_SERVICE};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /portainer/ {
        rewrite ^/portainer/(.*) /$1 break;
        proxy_pass http://${PORTAINER_SERVICE};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 프론트엔드 서비스로의 프록시 (필요한 경우)
    location / {
        proxy_pass http://${FRONTEND_SERVICE};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
