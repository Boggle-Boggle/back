services:
  app:
    image: ${DOCKERHUB_USERNAME}/bbegok:latest
    platform: linux/arm64
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - datadog

  portainer:
    image: portainer/portainer-ce
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: bbaegok
      #MYSQL_USER: ${MYSQL_USER}
      #MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: UTC                         #Linux 컨테이너 타임존 설정
    command: --default-time-zone='+00:00' #MySQL 컨테이너
    volumes:
      - mysql-data:/var/lib/mysql

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH}/fullchain.pem:${SSL_CERTIFICATE}:ro
      - ${SSL_CERT_PATH}/privkey.pem:${SSL_CERTIFICATE_KEY}:ro
      - ./html:/var/www/html:rw
    depends_on:
      - app
      - portainer

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  datadog:
    image: gcr.io/datadoghq/agent:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=us5.datadoghq.com
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_MYSQL_ENABLED=true
      - DD_IGNORE_AUTOCONF=redisdb
      - DD_CONTAINER_EXCLUDE=name:datadog-agent
    ports:
      - "8126:8126"  # APM
      - "8125:8125/udp"  # Dogstatsd (metrics UDP)
    volumes:
      - ./datadog-agent/datadog.yaml:/etc/datadog-agent/datadog.yaml:ro #메인설정
      - ./datadog-agent/mysql.yaml:/etc/datadog-agent/conf.d/mysql.d/conf.yaml:ro #MySQL 설정
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    restart: unless-stopped

  metabase:
    image: metabase/metabase:v0.53.16
    platform: linux/arm64
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
      - MB_SITE_URL=${ANALYTICS_DOMAIN_NAME}
    volumes:
      - metabase-data:/metabase-data

volumes:
  mysql-data:
  portainer_data:
  redis-data:

x-dockerhub-auth: &dockerhub-auth
  username: ${DOCKERHUB_USERNAME}
  password: ${DOCKERHUB_TOKEN}
